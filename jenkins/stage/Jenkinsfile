pipeline {
    agent any 
    stages {

        stage('Git') {
            steps {
                step([$class: 'WsCleanup'])
                checkout scm
            }
        }
        
        stage('release prepare')
        {
           steps{
               withCredentials([steps.usernamePassword(credentialsId: 'GIT', usernameVariable: 'GIT_USERNAME',passwordVariable: 'GIT_PASSWORD')]) {

                    echo '${GIT_USERNAME}'
                    echo '${GIT_PASSWORD}'
                    sh 'git checkout -f master'
                    sh 'git config --global user.email "niroshan.kdt@gmail.com"'
                    sh 'git config --global user.name "niroshan009"'
                    sh './gradlew releasePrepare'
                }
           }     
        }

        stage('deploy to release')
        {
            withCredentials([steps.usernamePassword(
      credentialsId: 'ARTIFACTORY',
      usernameVariable: 'JFROG_USERNAME_1',
      passwordVariable: 'JFROG_PASSWORD_1')]) {

                    sh './gradlew uploadToProductionArtifactory'
                }
           }     
        }

        stage('perform release')
        {
           steps{
               withCredentials([steps.usernamePassword(credentialsId: 'GIT', usernameVariable: 'GIT_USERNAME',passwordVariable: 'GIT_PASSWORD')]) {

                    echo '${GIT_USERNAME}'
                    echo '${GIT_PASSWORD}'
                    sh 'git checkout -f master'
                    sh 'git config --global user.email "niroshan.kdt@gmail.com"'
                    sh 'git config --global user.name "niroshan009"'
                    sh './gradlew releasePerform'
                }
           }     
        }

       stage('deploy to snapshot')
        {
            withCredentials([steps.usernamePassword(
      credentialsId: 'ARTIFACTORY',
      usernameVariable: 'JFROG_USERNAME_1',
      passwordVariable: 'JFROG_PASSWORD_1')]) {

                    sh './gradlew uploadToProductionArtifactory'
                }
        }
       
        
    }
}
